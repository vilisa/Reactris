{"version":3,"sources":["Settings/Settings.js","Pieces/Pieces.js","Pieces/Piece.js","Components/BoardController.js","Actions/Actions.js","Components/BoardRenderer.js","Components/Info.js","Components/Controls.js","Components/Menu.js","Reactris.js","serviceWorker.js","index.js"],"names":["Settings","GAME_WIDTH","GAME_HEIGHT","GAME_TICK","MOVEMENT_INTERVAL","O","J","L","T","I","Z","S","Pieces","getShape","type","rotation","shapes","getRotations","Piece","stringShape","Object","classCallCheck","this","_shape","_shapes","_rotation","_pos_y","_pos_x","Math","round","getOffset","_potential_shape","_potential_rotation","_potential_pos_y","_potential_pos_x","offset","rowOffset","row","shape","length","col","r","y","x","BoardController","Array","fill","map","_","state","piece","newBoard","getNewBoard","landed","pos_y","pos_x","el","document","getElementById","ratio","style","width","offsetHeight","AppActions","validateMove","paused","gameOver","isSpaceAvailable","potential_shape","potential_pos_y","potential_pos_x","error","moveDown","console","log","landPiece","moveLeft","moveRight","hardDrop","rotate","potential_rotation","pause","reset","score","linesCleared","board","spawnPiece","checkGameOver","randShape","floor","random","BoardRenderer","value","react_default","a","createElement","className","_this","props","key","id","drawCol","Component","Info","Controls","possibleConstructorReturn","getPrototypeOf","call","holding","arrow","movePiece","Actions","setState","arrow_up_interval","arrow_down_interval","arrow_left_interval","arrow_right_interval","timeoutID","setInterval","clearTimeout","_this2","onClick","onMouseDown","start","onMouseUp","stop","ontouchstart","ontouchend","Menu","Reactris","intervalID","drawBoard","attachEventListeners","clearInterval","startGame","Components_Menu","_this3","Components_BoardRenderer","Components_Info","Components_Controls","p","setPieceState","s","setWholeState","_this4","window","onload","scaleBoard","addEventListener","bind","event","code","Boolean","location","hostname","match","ReactDOM","render","src_Reactris_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c58745f2.chunk.js","sourcesContent":["export default {\r\n  //dimensions in \"blocks\"\r\n  GAME_WIDTH: 10,\r\n  GAME_HEIGHT: 16,\r\n\r\n  //time interval to move down automatically, in ms\r\n  GAME_TICK: 500,\r\n\r\n  //movement interval when holding buttons\r\n  MOVEMENT_INTERVAL: 150\r\n};","const O = [\r\n  [[1,1],\r\n   [1,1]],\r\n];\r\n\r\nconst J = [\r\n  [[0,1,1],\r\n   [0,1,0],\r\n   [0,1,0]],\r\n\r\n  [[0,0,0],\r\n   [1,1,1],\r\n   [0,0,1]],\r\n\r\n  [[0,1,0],\r\n   [0,1,0],\r\n   [1,1,0]],\r\n\r\n  [[1,0,0],\r\n   [1,1,1],\r\n   [0,0,0]]\r\n];\r\n\r\nconst L = [\r\n  [[1,1,0],\r\n   [0,1,0],\r\n   [0,1,0]],\r\n\r\n  [[0,0,1],\r\n   [1,1,1],\r\n   [0,0,0]],\r\n\r\n  [[0,1,0],\r\n   [0,1,0],\r\n   [0,1,1]],\r\n\r\n  [[0,0,0],\r\n   [1,1,1],\r\n   [1,0,0]],\r\n];\r\n\r\nconst T = [\r\n  [[0,1,0],\r\n   [1,1,1],\r\n   [0,0,0]],\r\n\r\n  [[0,1,0],\r\n   [0,1,1],\r\n   [0,1,0]],\r\n\r\n  [[0,0,0],\r\n   [1,1,1],\r\n   [0,1,0]],\r\n\r\n  [[0,1,0],\r\n   [1,1,0],\r\n   [0,1,0]],\r\n];\r\n\r\nconst I = [\r\n  [[0,0,1,0],\r\n   [0,0,1,0],\r\n   [0,0,1,0],\r\n   [0,0,1,0]],\r\n\r\n  [[0,0,0,0],\r\n   [0,0,0,0],\r\n   [1,1,1,1],\r\n   [0,0,0,0]],\r\n\r\n  [[0,1,0,0],\r\n   [0,1,0,0],\r\n   [0,1,0,0],\r\n   [0,1,0,0]],\r\n\r\n  [[0,0,0,0],\r\n   [1,1,1,1],\r\n   [0,0,0,0],\r\n   [0,0,0,0]],\r\n];\r\n\r\nconst Z = [\r\n  [[0,1,0],\r\n   [0,1,1],\r\n   [0,0,1]],\r\n\r\n  [[0,0,0],\r\n   [0,1,1],\r\n   [1,1,0]],\r\n\r\n  [[1,0,0],\r\n   [1,1,0],\r\n   [0,1,0]],\r\n\r\n  [[0,1,1],\r\n   [1,1,0],\r\n   [0,0,0]]\r\n];\r\n\r\nconst S = [\r\n  [[0,0,1],\r\n   [0,1,1],\r\n   [0,1,0]],\r\n\r\n  [[0,0,0],\r\n   [1,1,0],\r\n   [0,1,1]],\r\n\r\n  [[0,1,0],\r\n   [1,1,0],\r\n   [1,0,0]],\r\n\r\n  [[1,1,0],\r\n   [0,1,1],\r\n   [0,0,0]],\r\n];\r\n\r\nconst Pieces = {\r\n  getShape(type, rotation){\r\n    var shapes;\r\n    var piece;\r\n\r\n    switch (type) {\r\n      case 'O':\r\n       shapes = O;\r\n        break;\r\n      case 'J':\r\n        shapes = J;\r\n        break;\r\n      case 'L':\r\n        shapes = L;\r\n        break;\r\n      case 'I':\r\n        shapes = I;\r\n        break;\r\n      case 'T':\r\n        shapes = T;\r\n        break;\r\n      case 'Z':\r\n        shapes = Z;\r\n        break;\r\n      case 'S':\r\n       shapes = S;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    piece = shapes[rotation];\r\n    return piece;\r\n  },\r\n\r\n  getRotations(type){\r\n    var shapes;\r\n    switch (type) {\r\n      case 'O':\r\n       shapes = O;\r\n        break;\r\n      case 'J':\r\n        shapes = J;\r\n        break;\r\n      case 'L':\r\n        shapes = L;\r\n        break;\r\n      case 'I':\r\n        shapes = I;\r\n        break;\r\n      case 'T':\r\n        shapes = T;\r\n        break;\r\n      case 'Z':\r\n        shapes = Z;\r\n        break;\r\n      case 'S':\r\n       shapes = S;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return shapes;\r\n  }\r\n};\r\n\r\nexport default Pieces;","import Pieces from \"./Pieces.js\";\r\nimport Settings from '../Settings/Settings.js';\r\n\r\nclass Piece {\r\n  constructor(stringShape, rotation) {\r\n    this._shape = Pieces.getShape(stringShape, rotation);\r\n    this._shapes = Pieces.getRotations(stringShape);\r\n    this._rotation = rotation;\r\n    this._pos_y = 0;\r\n    this._pos_x = Math.round((Settings.GAME_WIDTH / 2 - 1) - this.getOffset()); //center piece\r\n\r\n    this._potential_shape = this._shape;\r\n    this._potential_rotation = this._rotation;\r\n    this._potential_pos_y = this._pos_y;\r\n    this._potential_pos_x = this._pos_x;\r\n  }\r\n  \r\n  get shape(){\r\n    return this._shape;\r\n  }\r\n  get shapes(){\r\n    return this._shapes;\r\n  }\r\n  get rotation(){\r\n    return this._rotation;\r\n  }\r\n  get pos_y(){\r\n    return this._pos_y;\r\n  }\r\n  get pos_x(){\r\n    return this._pos_x;\r\n  }\r\n\r\n  get potential_shape(){\r\n    return this._potential_shape;\r\n  }\r\n  get potential_rotation(){\r\n    return this._potential_rotation;\r\n  }\r\n  get potential_pos_y(){\r\n    return this._potential_pos_y;\r\n  }\r\n  get potential_pos_x(){\r\n    return this._potential_pos_x;\r\n  }\r\n  \r\n\r\n  //Example: shape = shapes[1];\r\n  set shape(shape){\r\n    this._shape = shape;\r\n  }\r\n  set shapes(shapes){\r\n    this._shapes = shapes;\r\n  }\r\n  set rotation(r){\r\n    this._rotation = r;\r\n  }\r\n  set pos_y(y){\r\n    this._pos_y = y;\r\n  }\r\n  set pos_x(x){\r\n    this._pos_x = x;\r\n  }\r\n\r\n  set potential_shape(shape){\r\n    this._potential_shape = shape;\r\n  }\r\n  set potential_rotation(r){\r\n    this._potential_rotation = r;\r\n  }\r\n  set potential_pos_y(y){\r\n    this._potential_pos_y = y;\r\n  }\r\n  set potential_pos_x(x){\r\n    this._potential_pos_x = x;\r\n  }\r\n\r\n  getOffset(){\r\n    let offset = 1000;\r\n    let rowOffset = 0;\r\n    for (let row = 0; row < this.shape.length; row++) {\r\n      rowOffset = 0;\r\n      for (let col = 0; col < this.shape[row].length; col++) {\r\n        if (this.shape[row][col] !== 0) break;\r\n        rowOffset++;\r\n      }\r\n      if(rowOffset < offset) offset = rowOffset;\r\n    }\r\n    return offset;\r\n  }\r\n\r\n}\r\n\r\nexport default Piece;","import Settings from '../Settings/Settings';\r\n\r\nclass BoardController {\r\n\r\n    /*\r\n    * returns a new empty 10:16 board, can be changed in settings\r\n    */\r\n    static getNewBoard(){\r\n        return Array(Settings.GAME_HEIGHT).fill(null).map(_ => Array(Settings.GAME_WIDTH).fill(0));\r\n    }\r\n\r\n    /*\r\n    * helper function to calculate boards current state, with piece position and landed blocks\r\n    */\r\n    static drawBoard(state){\r\n      if(state.piece){\r\n          var newBoard = this.getNewBoard();\r\n          var landed = state.landed;\r\n          var piece = state.piece;\r\n      \r\n          //draw landed\r\n          for (let row = 0; row < landed.length; row++) {\r\n            for (let col = 0; col < landed[row].length; col++) {\r\n              if (landed[row][col] !== 0) {\r\n                //draw piece at position corresponding to row and col\r\n                newBoard[row][col] = 1;\r\n              }\r\n            }\r\n          }\r\n      \r\n          //draw current piece\r\n          for (let row = 0; row < piece.shape.length; row++) {\r\n            for (let col = 0; col < piece.shape[row].length; col++) {\r\n              if (piece.shape[row][col] !== 0) {\r\n                //draw piece on board\r\n                newBoard[row + piece.pos_y][col + piece.pos_x] = piece.shape[row][col];\r\n              }\r\n            }\r\n          }\r\n          return newBoard;\r\n      }\r\n    }\r\n\r\n    static scaleBoard(){\r\n      let el = document.getElementById('scaler');\r\n      let ratio = Settings.GAME_WIDTH / Settings.GAME_HEIGHT;\r\n      el.style.width = el.offsetHeight * ratio + 'px';\r\n    }\r\n};\r\n\r\nexport default BoardController;","import Piece from '../Pieces/Piece.js';\r\nimport BoardController from '../Components/BoardController.js';\r\n\r\nconst AppActions = {\r\n  \r\n  validateMove(state){\r\n    if(!state.paused && !state.gameOver && state.piece && this.isSpaceAvailable(state)){\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n\r\n  isSpaceAvailable(state){\r\n    var piece = state.piece;\r\n    var landed = state.landed;\r\n\r\n    //try catch to handle piece going over board\r\n    try {\r\n      for (let row = 0; row < piece.potential_shape.length; row++) {\r\n        for (let col = 0; col < piece.potential_shape[row].length; col++) {\r\n          if (piece.potential_shape[row][col] !== 0) {\r\n            if(landed[row + piece.potential_pos_y][col + piece.potential_pos_x] !== 0){\r\n              //Space not available\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  },\r\n\r\n  moveDown(state) {\r\n    state.piece.potential_pos_y = state.piece.pos_y + 1;\r\n\r\n    if(this.validateMove(state)){\r\n      console.log('Down');\r\n      state.piece.pos_y = state.piece.potential_pos_y;\r\n    } else {\r\n      //cant move down, land the block in place\r\n      this.landPiece(state);\r\n    }\r\n    return state;\r\n  },\r\n\r\n  moveLeft(state) {\r\n    var piece = state.piece;\r\n    piece.potential_pos_x = piece.pos_x - 1;\r\n\r\n    if(this.validateMove(state)){\r\n      console.log('Left');\r\n      piece.pos_x = piece.potential_pos_x;\r\n    } else {\r\n      //reset\r\n      piece.potential_pos_x = piece.pos_x;\r\n    }\r\n    return piece;\r\n  },\r\n\r\n  moveRight(state) {\r\n    var piece = state.piece;\r\n    piece.potential_pos_x = piece.pos_x  + 1;\r\n\r\n    if(this.validateMove(state)){\r\n      console.log('Right');\r\n      piece.pos_x = piece.potential_pos_x;\r\n    } else {\r\n      //reset\r\n      piece.potential_pos_x = piece.pos_x;\r\n    }\r\n    return piece;\r\n  },\r\n\r\n  hardDrop(state) {\r\n    if(this.validateMove(state)){\r\n      console.log('Drop');\r\n      //TODO\r\n    }\r\n  },\r\n\r\n  rotate(state) {\r\n    var piece = state.piece;\r\n    piece.potential_rotation = piece.rotation + 1;\r\n\r\n    //check if has next shape\r\n    if(piece.potential_rotation < piece.shapes.length){\r\n      piece.potential_shape = piece.shapes[piece.potential_rotation];\r\n    } else {\r\n      piece.potential_rotation = 0;\r\n      piece.potential_shape = piece.shapes[0];\r\n    }\r\n    \r\n    if(this.validateMove(state)){\r\n      piece.shape = piece.potential_shape;\r\n      piece.rotation = piece.potential_rotation;\r\n    } else {\r\n      //reset\r\n      piece.potential_rotation = piece.rotation;\r\n      piece.potential_shape = piece.shape;\r\n    }\r\n    return piece;\r\n  },\r\n\r\n  pause(state) {\r\n    state.paused = !state.paused;\r\n    (state.paused ? console.log('Pause') : console.log('Resume') );\r\n    return state.paused;\r\n  },\r\n\r\n  reset(){\r\n    let newState = {\r\n      score: 0,\r\n      linesCleared: 0,\r\n      paused: false,\r\n      gameOver: false,\r\n      board: BoardController.getNewBoard(),\r\n      landed: BoardController.getNewBoard(),\r\n      piece: this.spawnPiece()\r\n    };\r\n    return newState;\r\n  },\r\n\r\n  landPiece(state){\r\n    if(!state.paused && !state.gameOver && state.piece){\r\n      console.log('land piece');\r\n      var piece = state.piece;\r\n      var landed = state.landed;\r\n\r\n      //draw piece to landed board\r\n      for (let row = 0; row < piece.shape.length; row++) {\r\n        for (let col = 0; col < piece.shape[row].length; col++) {\r\n          if (piece.shape[row][col] !== 0) {\r\n            landed[row + piece.pos_y][col + piece.pos_x] = piece.shape[row][col];\r\n          }\r\n        }\r\n      }\r\n      state.score = state.score + 10;\r\n\r\n      //check game over\r\n      if(this.checkGameOver(state)){\r\n        console.log('Game over');\r\n        state.gameOver = true;\r\n      } else {\r\n        state.piece = this.spawnPiece();\r\n      }\r\n    }\r\n    return state;\r\n  },\r\n\r\n  checkGameOver(state){\r\n    var landed = state.landed;\r\n    for (let col = 0; col < landed[0].length; col++){\r\n      if(landed[0][col] !== 0){\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  },\r\n\r\n  spawnPiece(){\r\n    var list = ['O', 'J', 'L', 'I', 'T', 'Z', 'S'];\r\n    var randShape = list[Math.floor(Math.random() * 7)];\r\n    return new Piece(randShape, 0);\r\n  },\r\n\r\n};\r\n\r\nexport default AppActions;\r\n\r\n\r\n  /*\r\n  rotation pushing \r\n    var pw = piece.shapes[piece.potential_rotation][0].length;\r\n    var ph = piece.shapes[piece.potential_rotation].length;\r\n\r\n    var width = state.board[0].length;\r\n    var height = state.board.length;\r\n    var npw = piece.shapes[piece.potential_rotation][0].length;\r\n    var nph = piece.shapes[piece.potential_rotation].length;\r\n    var py = piece.potential_pos_y;\r\n    var px = piece.potential_pos_x;\r\n\r\n    else if(this.isWithinBoundaries(state) === false){\r\n      if(width < (px + pw)){\r\n        console.log('w1');\r\n        piece.pos_x = px - (npw);\r\n      } else if(px < 0){\r\n        console.log('w1');\r\n        piece.pos_x = px + (npw + pw);\r\n      } else if(height < (py + ph)){\r\n        console.log('h1');\r\n        piece.pos_y = py - (nph - ph);\r\n      } else if((py < 0)){\r\n        console.log('h2');\r\n        piece.pos_y = py + (nph + ph);\r\n      }\r\n      piece.rotation = piece.potential_rotation;\r\n    } \r\n  */","import React, { Component } from 'react';\r\n\r\nclass BoardRenderer extends Component {\r\n\r\n  drawCol(value) {\r\n    if (value === 0) {\r\n      return <div className=\"col empty\"></div>;\r\n    }\r\n    return <div className=\"col filled\"></div>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"table\">\r\n        {this.props.state.map(row => (\r\n          <div className=\"row\" key={row.id}>\r\n          \r\n            {row.map(col => (\r\n              this.drawCol(col)\r\n            ))}\r\n\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardRenderer;","import React, { Component } from 'react';\r\nimport './css/info.css';\r\n\r\nclass Info extends Component {\r\n  paused(){\r\n    if(this.props.state.paused){\r\n      return (\r\n          <span className=\"blink\">\r\n            ||\r\n          </span>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"info\">\r\n        {this.paused()}\r\n        <span className=\"score\">\r\n          Score: {this.props.state.score}    Lines: {this.props.state.linesCleared}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;","import React, { Component } from 'react';\r\nimport Actions from '../Actions/Actions.js';\r\nimport './css/Controls.css';\r\nimport Settings from '../Settings/Settings.js';\r\n\r\nclass Controls extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      arrow_up_interval: null,\r\n      arrow_down_interval: null,\r\n      arrow_left_interval: null,\r\n      arrow_right_interval: null\r\n    }\r\n  }\r\n\r\n  //start holding\r\n  start(arrow){\r\n    var timeoutID = setInterval(this.holding, Settings.MOVEMENT_INTERVAL, arrow);\r\n\r\n    switch(arrow){\r\n      case 'up':\r\n        this.setState({arrow_up_interval: timeoutID});\r\n        break;\r\n      case 'down':\r\n        this.setState({arrow_down_interval: timeoutID});\r\n        break;\r\n      case 'left':\r\n        this.setState({arrow_left_interval: timeoutID});\r\n        break;\r\n      case 'right':\r\n        this.setState({arrow_right_interval: timeoutID});\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  //stop holding\r\n  stop(arrow){\r\n    switch(arrow){\r\n      case 'up':\r\n        clearTimeout(this.state.arrow_up_interval);\r\n        break;\r\n      case 'down':\r\n        clearTimeout(this.state.arrow_down_interval);\r\n        break;\r\n      case 'left':\r\n        clearTimeout(this.state.arrow_left_interval);\r\n        break;\r\n      case 'right':\r\n        clearTimeout(this.state.arrow_right_interval);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  //while holding\r\n  holding = (arrow) => {\r\n    switch(arrow){\r\n      case 'up':\r\n        this.props.movePiece(Actions.rotate(this.props.state));\r\n        break;\r\n      case 'down':\r\n        this.props.setState(Actions.moveDown(this.props.state))\r\n        break;\r\n      case 'left':\r\n        this.props.movePiece(Actions.moveLeft(this.props.state))\r\n        break;\r\n      case 'right':\r\n        this.props.movePiece(Actions.moveRight(this.props.state))\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"buttons\">\r\n          <div className=\"button\">\r\n            <button onClick={() => this.props.pause()}></button>\r\n            <div>Pause</div>\r\n          </div>\r\n          <div className=\"button\">\r\n            <button className=\"reset\" onClick={() => this.props.reset()}></button>\r\n            <div>Reset</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"arrows\">\r\n          <center>\r\n            <div className=\"up\">\r\n              <button className=\"arrow-up\" id=\"arrow-up\"\r\n                onClick={() => this.props.movePiece(Actions.rotate(this.props.state))}\r\n                onMouseDown={() => this.start('up')} \r\n                onMouseUp={() => this.stop('up')}\r\n                ontouchstart={() => this.start('up')}\r\n                ontouchend={() => this.stop('down')}\r\n              />\r\n            </div>\r\n            <div className=\"left-right\">\r\n              <button className=\"arrow-left\"\r\n                onClick={() => this.props.movePiece(Actions.moveLeft(this.props.state))}\r\n                onMouseDown={() => this.start('left')} \r\n                onMouseUp={() => this.stop('left')}\r\n                />\r\n              <span className=\"spacer\">\r\n                <i className=\"up\"/>\r\n                <i className=\"left\"/>\r\n                <i className=\"right\"/>\r\n                <i className=\"down\"/>\r\n              </span>\r\n              <button className=\"arrow-right\"\r\n                onClick={() => this.props.movePiece(Actions.moveRight(this.props.state))}\r\n                onMouseDown={() => this.start('right')} \r\n                onMouseUp={() => this.stop('right')}\r\n              />\r\n            </div>\r\n            <div className=\"down\">\r\n              <button className=\"arrow-down\" \r\n                onClick={() => this.props.setState(Actions.moveDown(this.props.state))}\r\n                onMouseDown={() => this.start('down')}\r\n                onMouseUp={() => this.stop('down')}\r\n              />\r\n            </div>\r\n          </center>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Controls;","import React, { Component } from 'react';\r\nimport Actions from '../Actions/Actions.js';\r\nimport Settings from '../Settings/Settings.js';\r\nimport './css/Menu.css';\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"menu-container\">\r\n        <div className=\"menu\">\r\n          <h1>Paused</h1>\r\n          <div className=\"body\">\r\n            width: {Settings.GAME_WIDTH}\r\n            <br/>\r\n            height: {Settings.GAME_HEIGHT}\r\n            <br/>\r\n            Tick: {Settings.GAME_TICK}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\nimport './Reactris.css';\nimport Settings from './Settings/Settings.js';\nimport Actions from './Actions/Actions.js';\nimport BoardController from './Components/BoardController.js';\nimport BoardRenderer from './Components/BoardRenderer.js';\nimport Pieces from './Pieces/Pieces.js';\nimport Piece from './Pieces/Piece.js';\nimport Info from './Components/Info.js';\nimport Controls from './Components/Controls.js';\nimport Menu from './Components/Menu.js';\n\nclass Reactris extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      score: 0,\n      linesCleared: 0,\n      paused: false,\n      gameOver: false,\n      intervalID: null,\n      board: BoardController.getNewBoard(),\n      landed: BoardController.getNewBoard(),\n      piece: Actions.spawnPiece()\n    }\n\n    this.state.board = BoardController.drawBoard(this.state);\n\n    //DEBUG--------\n\n    //DEBUG--------\n  }\n\n  componentDidMount(){\n    this.attachEventListeners();\n    //this.startGame();\n  }\n\n  componentDidUpdate(){\n\n  }\n\n  startGame(){\n    //start tick, move piece down with each tick\n    var intervalID = setInterval(() => {\n      this.setState(Actions.moveDown(this.state));\n      this.drawBoard();\n    }, Settings.GAME_TICK);\n    \n    this.setState({intervalID: intervalID});\n  }\n  \n  drawBoard(){\n    this.setState({board: BoardController.drawBoard(this.state)});\n  }\n\n  setPieceState(state){\n    this.setState({piece: state}, function(){\n      //callback\n      this.drawBoard();\n    });\n  }\n\n  setWholeState(state){\n    this.setState(state, function(){\n      //callback\n      this.drawBoard();\n    });\n  }\n\n  pause(){\n    let paused = Actions.pause(this.state);\n    this.setState({paused: paused});\n    if(paused){\n      clearInterval(this.state.intervalID);\n    } else {\n      this.startGame();\n    }\n  }\n\n  //render helper\n  paused(){\n    if(this.state.paused){\n      return (\n          <Menu />\n      );\n    }\n  }\n\n  reset(){\n    this.setState(Actions.reset(), function(){\n      //callback\n      this.setState({board: BoardController.drawBoard(this.state)});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"gameboy\">\n          <div className=\"reactris-container\">\n            <div className=\"screen\">\n              {this.paused()}\n              <div id=\"scaler\">\n                <BoardRenderer state={this.state.board}/>\n              </div>\n              <Info state={this.state}/>\n            </div>\n            <div className=\"controls\">\n              <Controls state={this.state} \n              movePiece={p=>{this.setPieceState(p)}}\n              setState={s=>{this.setWholeState(s)}}\n              pause={()=>{this.pause()}}\n              reset={()=>{this.reset()}}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"debug-container\">\n          <div className=\"debug-board\">\n            Landed Debug\n            <BoardRenderer state={this.state.landed}/>\n          </div>\n          <div className=\"debug-board\">\n            Piece Debug\n            <BoardRenderer state={this.state.piece.shape}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  attachEventListeners() {\n    //Window Rezise\n    window.onload = () => {BoardController.scaleBoard()};\n    window.addEventListener(\"resize\", BoardController.scaleBoard.bind(this));\n\n    //Keyboard\n    document.addEventListener('keydown', (event) => {\n      if(!this.state.piece) {\n        return;\n      }\n      switch (event.code) {\n        case 'ArrowUp':\n          this.setPieceState(Actions.rotate(this.state));\n          break;\n        case 'ArrowDown':\n          this.setWholeState(Actions.moveDown(this.state));\n          break;\n        case 'ArrowLeft':\n          this.setPieceState(Actions.moveLeft(this.state));\n          break;\n        case 'ArrowRight':\n          this.setPieceState(Actions.moveRight(this.state));\n          break;\n        case 'Space':\n          this.setPieceState(Actions.hardDrop(this.state));\n          break;\n        case 'Escape':\n          this.pause();\n          break;\n        default:\n          break;\n      }\n    });\n  }\n}\n\nexport default Reactris;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Reactris from './Reactris';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Reactris />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}